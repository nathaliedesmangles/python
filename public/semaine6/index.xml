<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> Listes, chaînes et visualisation des données :: 420-SN1-RE</title>
    <link>https://example.org/semaine6/index.html</link>
    <description>Objectifs Créer, modifier et parcourir une liste simple. Manipuler des listes imbriquées (listes dans un liste). Appliquer les notions des listes simples sur les chaines de caractères. Créer, afficher, embellir et enregistrer des graphiques simples avec matplotlib. Apprendre par la pratique&#xD;Faites les exercices en vous aidant des notes de cours ci-dessous. Certains seront fait en classe à titre de démonstration. Les solutions seront disponibles à la fin de la semaine prochaine.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://example.org/semaine6/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Atelier - Version pas à pas</title>
      <link>https://example.org/semaine6/atelier/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine6/atelier/index.html</guid>
      <description>Exercice Un chercheur a mesuré la température moyenne (°C) de quatre villes pendant une semaine. Les données sont regroupées dans une liste de listes. Vous devez analyser et représenter ces données.&#xA;1. Les données Créez une liste temperatures contenant les valeurs suivantes (une sous-liste par ville) :&#xA;Ville A : [15, 16, 14, 14, 17, 18, 19] Ville B : [22, 23, 21, 20, 24, 25, 26] Ville C : [5, 7, 6, 6, 8, 9, 7] Ville D : [10, 11, 12, 10, 13, 14, 15] Créez aussi deux listes :</description>
    </item>
    <item>
      <title>Atelier - Version pas à pas (solution)</title>
      <link>https://example.org/semaine6/solution/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine6/solution/index.html</guid>
      <description>1. Les données # Données des températures temperatures = [ [15, 16, 14, 14, 17, 18, 19], # Ville A [22, 23, 21, 20, 24, 25, 26], # Ville B [5, 7, 6, 6, 8, 9, 7], # Ville C [10, 11, 12, 10, 13, 14, 15] # Ville D ] villes = [&#34;Ville A&#34;, &#34;Ville B&#34;, &#34;Ville C&#34;, &#34;Ville D&#34;] jours = [&#34;Lun&#34;, &#34;Mar&#34;, &#34;Mer&#34;, &#34;Jeu&#34;, &#34;Ven&#34;, &#34;Sam&#34;, &#34;Dim&#34;]&#xD;2.</description>
    </item>
    <item>
      <title>Exercices - Boucles imbriquées avec une liste de listes</title>
      <link>https://example.org/semaine6/exercices/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine6/exercices/index.html</guid>
      <description>Niveau 1 – Manipuler et afficher Exercice 1 : Liste d’animaux Crée la liste suivante :&#xA;animaux = [[&#34;chat&#34;, &#34;chien&#34;], [&#34;lion&#34;, &#34;tigre&#34;], [&#34;souris&#34;, &#34;rat&#34;]]&#xD;Créer une première boucle pour parcourir chaque sous-liste.&#xA;À l’intérieur, créer une deuxième boucle pour parcourir les animaux de la sous-liste.&#xA;Afficher chaque animal sur la même ligne (print(animal, end=&#34; &#34;).&#xA;Passer à la ligne quand tu as fini une sous-liste.&#xA;Résultat attendu :&#xA;chat chien lion tigre souris rat&#xD;Niveau 2 – Comprendre la structure Exercice 2 : Noms et prénoms Crée les deux listes :</description>
    </item>
    <item>
      <title>print et end</title>
      <link>https://example.org/semaine6/print_end/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine6/print_end/index.html</guid>
      <description>En Python, la fonction print(), ajoute par défaut un saut de ligne (\n) à la fin de chaque instruction. Ce comportement peut être modifié grâce au paramètre end, qui permet de préciser une autre chaîne de caractères (comme un espace &#34; &#34;, une virgule &#34;,&#34; ou un tiret &#34;-&#34;, etc.) à afficher à la fin. Cela rend possible l’affichage de plusieurs sorties sur la même ligne ou avec des séparateurs personnalisés.</description>
    </item>
  </channel>
</rss>