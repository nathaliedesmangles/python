<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://localhost:1313/environnement_travail/vs-code/index.html</link>
    <description>Installation de VS Code Étapes : Aller sur le site officiel : https://code.visualstudio.com Cliquer sur Download for Windows Lancer le fichier téléchargé (VSCodeSetup.exe) Accepter les conditions → clique sur Suivant plusieurs fois Cocher “Add to PATH” si disponible Cliquer sur Installer Lancer VS Code Clique sur le raccourci Visual Studio Code dans le menu Démarrer Ou cherche “VS Code” dans la barre de recherche Découverte de l’interface Élément Description Barre latérale Explorer, Rechercher, Contrôle Git, Extensions Onglet “Explorer” Voir et ouvrir fichiers/dossiers Zone centrale Éditeur de texte Barre du haut Onglets des fichiers ouverts Terminal intégré Accès direct à la ligne de commande Barre latérale La barre latérale de Visual Studio Code, située à gauche de l’éditeur, est une zone essentielle de l’interface utilisateur.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/environnement_travail/vs-code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Déboguer dans Visual Studio Code</title>
      <link>http://localhost:1313/environnement_travail/vs-code/deboggueur/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/environnement_travail/vs-code/deboggueur/index.html</guid>
      <description>Extensions de débogage VS Code prend en charge le débogage pour Node.js et peut déboguer JavaScript, TypeScript, et d’autres langages compilés en JavaScript. Pour d’autres langages et environnements d’exécution, il existe des extensions de débogage dans le Marketplace de VS Code.&#xA;Par exemple pour Python:&#xA;Le débogueur est un outil utile qui vous permet d’inspecter le flux d’exécution de votre code et d’identifier plus facilement les erreurs, ainsi que d’explorer comment vos variables et données changent au fur et à mesure que votre programme s’exécute.</description>
    </item>
    <item>
      <title>Sauvegarde avec Visual Studio Code</title>
      <link>http://localhost:1313/environnement_travail/vs-code/sauvegarge-automatique/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/environnement_travail/vs-code/sauvegarge-automatique/index.html</guid>
      <description>Sur cette page, vous trouverez les étapes pour sauvegarder vos programmes dans VS Code.&#xA;Sauvegarde automatique Si un rond est présent à droit du nom du fichier dans l’onglet en haut, c’est que votre travail n’est PAS sauvegardé (comme dans l’exemple ci-dessous).&#xA;Pour ACTIVER la sauvegarde automatique, allez dans fichier, puis cliquez sur Enregistrement automatique.&#xA;Vous devriez maintenant voir un crochet à gauche de cette option.&#xA;Il devrait maintenant avoir un X à gauche du nom du fichier dans l’onglet du haut.</description>
    </item>
    <item>
      <title>Visual Studio Code &amp; Jupyter</title>
      <link>http://localhost:1313/environnement_travail/vs-code/vs-code-jupyter/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/environnement_travail/vs-code/vs-code-jupyter/index.html</guid>
      <description>Visual Studio Code &amp; Jupyter Notebook Dans ce cours, nous allons utiliser deux outils pour analyser des données scientifiques avec Python. Il s’agit de Visual Studio Code et Jupyter Notebook.&#xA;Visual Studio Code Visual Studio Code est comme un cahier de notes pour écrire du code.&#xA;Il est gratuit et peut être utilisé avec beaucoup de langages de programmation, dont Python.&#xA;Il a des fonctionnalités cool, comme :&#xA;aider à compléter le code.</description>
    </item>
  </channel>
</rss>