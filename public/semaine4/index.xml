<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Répéter avec `for` et `while` :: 420-SN1-RE</title>
    <link>https://example.org/semaine4/index.html</link>
    <description>Objectifs de la leçon Comprendre l’utilité des boucles en programmation Savoir écrire des boucles while et for Appliquer les boucles à des cas concrets en sciences (répétitions, séries de mesures, simulations) Pourquoi utiliser une boucle? Une boucle permet de répéter automatiquement une suite d’instructions tant qu’une condition est vraie (while) ou pour parcourir une série de valeurs (for).&#xA;La boucle while Syntaxe de base : compteur = 0 while compteur &lt; 5: print(&#34;Compteur =&#34;, compteur) compteur += 1&#xD;Il faut modifier la condition dans la boucle pour éviter une boucle infinie.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://example.org/semaine4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Activité 4 – Table de multiplication et données expérimentales</title>
      <link>https://example.org/semaine4/atelier/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine4/atelier/index.html</guid>
      <description>Objectifs d’apprentissage Utiliser les boucles for et while pour automatiser des tâches répétitives. Appliquer les boucles à une situation scientifique concrète. Travailler en collaboration pour planifier une solution et tester différents scénarios. Partie 1 – Table de multiplication Écrire un programme Python qui affiche la table de multiplication d’un nombre donné par l’usager (entre 1 et 12), jusqu’à 12 × ce nombre.&#xA;Exemple de sortie :&#xA;Entrez un nombre entre 1 et 12 : 7&#xD;1 x 7 = 7&#xD;2 x 7 = 14&#xD;3 x 7 = 21&#xD;.</description>
    </item>
  </channel>
</rss>