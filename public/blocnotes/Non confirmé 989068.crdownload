{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c424a1e5",
   "metadata": {},
   "source": [
    "\n",
    "# üß™ Atelier : Analyse de la qualit√© de l‚Äôeau d‚Äôune rivi√®re\n",
    "\n",
    "## Objectif\n",
    "Dans cet atelier, tu vas apprendre √† **lire, nettoyer, analyser et enregistrer** des donn√©es environnementales √† l‚Äôaide de **NumPy** et **Pandas**.\n",
    "\n",
    "Contexte scientifique :  \n",
    "Un groupe d‚Äô√©tudiants en sciences environnementales surveille la qualit√© de l‚Äôeau d‚Äôune rivi√®re.  \n",
    "Les mesures (temp√©rature, pH, concentration en oxyg√®ne, turbidit√©) ont √©t√© recueillies √† diff√©rents points de la rivi√®re.  \n",
    "Certaines donn√©es sont manquantes et doivent √™tre trait√©es avant l‚Äôanalyse.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13e2740a",
   "metadata": {},
   "source": [
    "\n",
    "## Partie 1 ‚Äî Lecture de fichiers avec NumPy\n",
    "\n",
    "### √âtapes\n",
    "1. Ouvre et examine le fichier `river_data.txt` (espaces comme s√©parateurs).  \n",
    "2. Utilise `np.loadtxt()` pour le lire.  \n",
    "3. Affiche le tableau et v√©rifie sa forme.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f7f3c338",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import numpy as np\n",
    "\n",
    "# Lecture du fichier texte\n",
    "# (Compl√®te le code)\n",
    "data = np.loadtxt(\"river_data.txt\")  # <-- √† adapter selon le s√©parateur\n",
    "\n",
    "print(data[:5])  # aper√ßu des premi√®res lignes\n",
    "print(\"Forme du tableau :\", data.shape)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2d81302",
   "metadata": {},
   "source": [
    "\n",
    "## Partie 2 ‚Äî Lecture de fichiers avec Pandas\n",
    "\n",
    "### √âtapes\n",
    "1. Ouvre le fichier `river_quality.csv` avec `pd.read_csv()`.  \n",
    "2. Affiche les premi√®res lignes avec `.head()`.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c23b9d4d",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import pandas as pd\n",
    "\n",
    "# Lecture du fichier CSV\n",
    "df = pd.read_csv(\"river_quality.csv\")\n",
    "\n",
    "# Affichage des premi√®res lignes\n",
    "df.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c1165742",
   "metadata": {},
   "source": [
    "\n",
    "## Partie 3 ‚Äî Nettoyage des donn√©es manquantes\n",
    "\n",
    "Certaines valeurs sont manquantes dans le fichier CSV.  \n",
    "Tu dois les identifier et les remplacer.\n",
    "\n",
    "### √âtapes\n",
    "1. V√©rifie les valeurs manquantes avec `pd.isna(df)` ou `df.isnull().sum()`  \n",
    "2. Remplace-les par la **moyenne de la colonne** avec `fillna()`\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5f333420",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# V√©rification des valeurs manquantes\n",
    "df.isnull().sum()\n",
    "\n",
    "# Remplacement des valeurs manquantes par la moyenne\n",
    "df_filled = df.fillna(df.mean(numeric_only=True))\n",
    "\n",
    "df_filled.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b2b2c6c9",
   "metadata": {},
   "source": [
    "\n",
    "## Partie 4 ‚Äî Ajout d‚Äôune colonne conditionnelle\n",
    "\n",
    "Nous voulons indiquer si la qualit√© de l‚Äôeau est **Bonne**, **Moyenne** ou **Mauvaise** selon la concentration en oxyg√®ne dissous (O2).\n",
    "\n",
    "| O2 (mg/L) | Mention |\n",
    "|------------|----------|\n",
    "| ‚â• 8.0 | Bonne |\n",
    "| ‚â• 5.0 | Moyenne |\n",
    "| < 5.0 | Mauvaise |\n",
    "\n",
    "üëâ Utilise `np.where()` pour cr√©er une nouvelle colonne `\"Qualit√©\"` dans le DataFrame.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1d1f1e30",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# Cr√©ation d'une nouvelle colonne avec np.where()\n",
    "df_filled[\"Qualit√©\"] = np.where(df_filled[\"O2\"] >= 8, \"Bonne\",\n",
    "                                np.where(df_filled[\"O2\"] >= 5, \"Moyenne\", \"Mauvaise\"))\n",
    "\n",
    "df_filled.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c5e855f6",
   "metadata": {},
   "source": [
    "\n",
    "## Partie 5 ‚Äî Sauvegarde du fichier nettoy√©\n",
    "\n",
    "Sauvegarde le DataFrame final dans un **nouveau fichier CSV** nomm√© `river_quality_clean.csv` sans l‚Äôindex.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7d3da2fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "# Sauvegarde du fichier final\n",
    "df_filled.to_csv(\"river_quality_clean.csv\", index=False)\n",
    "print(\"‚úÖ Fichier nettoy√© enregistr√© sous 'river_quality_clean.csv'\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5cca5174",
   "metadata": {},
   "source": [
    "\n",
    "## üí° Pour aller plus loin\n",
    "\n",
    "1. Cr√©e une colonne `\"Temp√©rature_K\"` qui convertit les temp√©ratures (¬∞C ‚Üí K).  \n",
    "2. Filtre uniquement les √©chantillons o√π le pH est entre **6.5 et 8.5** (eau neutre).  \n",
    "3. Calcule la moyenne du pH et de la temp√©rature.  \n",
    "4. Repr√©sente graphiquement (avec matplotlib) la temp√©rature en fonction du point d‚Äô√©chantillonnage.\n"
   ]
  }
 ],
 "metadata": {},
 "nbformat": 4,
 "nbformat_minor": 5
}