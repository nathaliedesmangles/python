<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programmation en sciences :: 420-SN1-RE</title>
    <link>https://example.org/index.html</link>
    <description>Description du cours Ce cours permet de se familiariser avec la programmation informatique dans un contexte scientifique et de faire le lien entre les technologies et le domaine des sciences.&#xA;L’élève est introduit à la résolution de problèmes à l’aide d’algorithmes. Il doit traduire les algorithmes en code en utilisant un langage de programmation, tout en vérifiant le bon fonctionnement de son programme. Il traite des données et présente des résultats scientifiques à l’aide de la programmation lettrée.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Foire Aux Questions</title>
      <link>https://example.org/faq/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/faq/index.html</guid>
      <description>Outils et locaux pour pratiquer Quel logiciel je peux installer sur mon ordinateur personnel pour pratiquer à la maison ? Alternatives à VS Code La sauvegarde automatique dans Visual Studio Code. Sauvegarde dans VS Code Les raccourcis clavier (copier, coller, couper, enregistrer, etc.) Trucs pratiques pour bien coder Où se trouve les touches pour [, ], {, }, @, &lt;, &gt;, etc. sur un clavier QWERTY. Trucs pratiques pour bien coder Dans quels locaux du cégep, je peux aller pratiquer ?</description>
    </item>
    <item>
      <title>Outils de développement</title>
      <link>https://example.org/outils_dev/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/outils_dev/index.html</guid>
      <description>Se connecter à OneDrive Fichiers et répertoires/dossiers Utiliser Visual Studio Code (VS Code) Sauvegarde dans VS Code Déboguer dans VS Code Utiliser un bloc-note Jupyter Astuces et touches spéciales Markdown pour les rapports</description>
    </item>
    <item>
      <title>Règlements de classe</title>
      <link>https://example.org/regles/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/regles/index.html</guid>
      <description>1. Comporte-toi comme si tu étais déjà en emploi. Arrive à l’heure, sois prêt à travailler, et respecte les échéances. Ton attitude ici prépare ton avenir professionnel.&#xA;2. Respecte-toi, donc agis avec respect. Ton comportement reflète la manière dont tu te considères. Adopte une attitude calme, polie et attentive envers toi-même, les autres et l’enseignant·e.&#xA;3. Sois présent, mentalement et physiquement. Utilise ton cellulaire seulement pour les besoins du cours. Reste concentré·e pendant les activités, comme tu le ferais dans un contexte de travail.</description>
    </item>
    <item>
      <title>───────────────────</title>
      <link>https://example.org/separateur_section/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/separateur_section/index.html</guid>
      <description></description>
    </item>
    <item>
      <title>Les séances de cours</title>
      <link>https://example.org/cours/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/cours/index.html</guid>
      <description>Liste d’attente pour poser des questions Cliquez ici pour entrer votre nom&#xA;Plan de cours Plan de cours&#xA;Calendrier scolaire et répartition des 15 semaines Calendrier scolaire Répartition des 15 semaines Groupe 09&#xA;(lundi 15h20)&#xD;Groupe 11&#xA;(mercredi 08h00)&#xD;Groupe 10&#xA;(vendredi 15h20)&#xD;Cours 01&#xD;25 août&#xA;Quiz&#xD;27 août&#xA;Quiz&#xD;22 août&#xA;Quiz&#xD;Cours 02&#xD;4 septembre&#xD;3 septembre&#xD;29 août&#xD;Cours 03&#xD;8 septembre&#xD;10 septembre&#xD;5 septembre&#xD;Cours 04&#xD;15 septembre&#xD;17 septembre&#xD;12 septembre&#xD;Cours 05&#xD;Évaluation #1 (25%)</description>
    </item>
    <item>
      <title> Présentation du cours et l&#39;environnement de travail</title>
      <link>https://example.org/semaine1/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine1/index.html</guid>
      <description>Objectifs Comprendre les objectifs du cours et les règlements du collège à respecter (Quiz WooClap) Vous connecter à votre compte OneDrive scolaire. Créer une structure de dossiers pour le cours. Comprendre l’interface de VS Code Ouvrir un dossier et un fichier (.ipynb) dans VS Code. Créer un fichier .ipynb dans VS Code. Écrire et exécuter du code Python simple. Sauvegarder vos fichiers de code. 1. Présentation du cours Cliquez ici pour ouvrir le plan de cours et trouver le quiz interactif</description>
    </item>
    <item>
      <title> Variables, types, entrée utilisateur et fonctions prédéfinies</title>
      <link>https://example.org/semaine2/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine2/index.html</guid>
      <description>Objectifs Créer des variables et afficher leurs types (int, float, str, bool). Demander une donnée à l’utilisateur, la convertir et l’afficher de manière claire et lisible. Utiliser diverses fonctions prédéfinies. Écrire des programmes simples en python. Variables et types de données de base Une variable est un nom qui désigne une valeur. prenom = &#34;Alice&#34; age = 20 temperature = 25.8&#xD;Bien nommer vos variables: Utiliser des noms significatifs (ex : masse_corps, volume_solution) Commencer par une lettre ou un souligné (_), jamais par un chiffre.</description>
    </item>
    <item>
      <title> Structures conditionnelles et algorithmes simples</title>
      <link>https://example.org/semaine3/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine3/index.html</guid>
      <description>Objectifs Identifier et utiliser correctement les opérateurs de comparaison et logiques pour évaluer des conditions simples en Python. Appliquer les structures conditionnelles (if, elif, else) à des contextes scientifiques simples. Écrire des algorithmes simples et les traduire en Python. Les opérateurs de comparaison Ces opérateurs permettent de comparer des valeurs. Le résultat est toujours un booléen : True (vrai) ou False (faux).&#xA;Opérateur Signification Exemple Résultat == égal à 5 == 5 True !</description>
    </item>
    <item>
      <title> Boucles et débogage simple</title>
      <link>https://example.org/semaine4/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine4/index.html</guid>
      <description>Objectifs Répéter des instructions tant qu’une condition est vraie, avec la boucle while. Répéter des instructions un nombre de fois connu d’avance avec la boucle for. Interrompre le déroulement d’une boucle. Comprendre les messages d’erreurs et découvrir des stratégies simples de débogage. À quoi servent les boucles ? Répéter des instructions plusieurs fois, soit un nombre connu (for), soit jusqu’à ce qu’une condition soit atteinte (while).&#xA;Boucle while La boucle while répète un bloc tant qu’une condition est vraie.</description>
    </item>
    <item>
      <title> Évaluation #1 (25%)</title>
      <link>https://example.org/semaine5/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine5/index.html</guid>
      <description>Informations Date:&#x9;Semaine #5 (Voir le calendrier scolaire) Matière: Semaines 1 à 4 inclusivement Documentation permise: 1 feuille recto-verso (manuscrite ou imprimée) Format de l’examen:&#x9;Exercices pratiques avec VS Code.</description>
    </item>
    <item>
      <title> Listes, chaînes et visualisation des données</title>
      <link>https://example.org/semaine6/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine6/index.html</guid>
      <description>Objectifs Créer, modifier et parcourir une liste simple. Manipuler des listes imbriquées (listes dans un liste). Appliquer les notions des listes simples sur les chaines de caractères. Créer, afficher, embellir et enregistrer des graphiques simples avec matplotlib. Qu’est-ce qu’une liste ? Une liste, c’est un conteneur dans lequel on peut ranger plusieurs éléments (nombres, chaînes, booléens, etc.).&#xA;C’est un peu comme une boîte à compartiments.&#xA;ma_liste = [3, 7, 42, 5]&#xD;Chaque élément a une position (appelée indice).</description>
    </item>
    <item>
      <title> Tableaux numpy et droite de régression</title>
      <link>https://example.org/semaine7/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine7/index.html</guid>
      <description>Objectifs Créer des tableaux de données à une ou deux dimensions. Calculer des moyennes et écarts types. Gérer des données expérimentales incomplètes (np.nan). Comparer des résultats entre éléments ou conditions. Filtrer des données selon des conditions. Tracer un graphique à barres muni d’une barre d’erreur avec matplotlib. Tracer une droite de régression et interpréter la pente, l’ordonnée à l’origine et le coefficient de détermination R² Établir une relation entre deux données Importer la bibliothèque import numpy as np&#xD;Créer un tableau de données (array) Tableau 1D sol = np.</description>
    </item>
    <item>
      <title> Dictionnaires et fichier textes (csv)</title>
      <link>https://example.org/semaine8/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine8/index.html</guid>
      <description>Objectifs Créer un dictionnaire simple pour représenter des données associatives (ex. : atome → masse atomique) Manipuler des données dans un dictionnaire (accès, ajout, modification, parcours). Lire un fichier csv contenant des données expérimentales Explorer les données Filtrer les résultats pour donnée ciblée. Comparer des valeurs selon une donnée Qu’est-ce qu’un dictionnaire? Un dictionnaire est une structure de données qui associe des clés à des valeurs. Il permet de stocker des informations organisées, un peu comme un mini-fichier Excel, mais avec des étiquettes personnalisées au lieu d’indices numériques.</description>
    </item>
    <item>
      <title> Révision ou rattrapage</title>
      <link>https://example.org/semaine9/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine9/index.html</guid>
      <description>Bloc-notes de départ&#xA;Exercice 1 : Neutralisation acide-base (chimie) Notions : conditions, boucles, dictionnaire, fonctions Contexte : Un technicien doit ajuster progressivement le volume d’une base versée dans une solution acide pour atteindre un pH proche de 7.&#xA;Tâche :&#xA;Simule une titration acide-base par paliers de 0.5 mL. Utilise la formule p = 3 + 4 x (1 - 2.718^(-0.8 x v)) (à coder, où p est le pH et v le volume).</description>
    </item>
    <item>
      <title> Évaluation #2 (30%)</title>
      <link>https://example.org/semaine10/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine10/index.html</guid>
      <description>Informations ⦁ Date:&#x9;Semaine #10 (Voir le calendrier)&#xA;⦁ Matière: Semaines 6 à 9 inclusivement&#xA;⦁ Documentation permise: 1 feuille recto-verso (manuscrite ou imprimée)&#xA;⦁ Format:&#x9;À confirmer</description>
    </item>
    <item>
      <title> Fonctions personnalisées</title>
      <link>https://example.org/semaine11/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine11/index.html</guid>
      <description>Objectifs Définir vos propres fonctions avec def (paramètres, return, portée locale) Documenter les fonctions personnalisées (docstring) Création de fonction avec def Une fonction peut:&#xA;Afficher un résultat (ex: print()) Retourner un résultat (ex: input()) Comment créer et utiliser une fonction ? On utilise le mot clé def. Suivi du nom de la fonction. Suivi de parenthèses (). Suivi de deux-points :. Les instructions de la fonction sont sur les lignes d’en dessous, décalées.</description>
    </item>
    <item>
      <title> Projet - Présentation, analyse et traduction</title>
      <link>https://example.org/semaine12/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine12/index.html</guid>
      <description>Objectifs Présentation du projet Présentation de la grille de correction Analyse préliminaire du projet (activité guidée): Comprendre le problème Identifier les variables (types), constantes, formules, fonctions, etc. Élaborer les algorithmes Projet : Enquête scientifique par analyse d’ADN Contexte Vous êtes le ou la bioinformaticien·ne en charge d’une enquête médico-légale : votre rôle est d’identifier, à partir de données génétiques partielles, le ou les suspects les plus compatibles avec un échantillon d’ADN trouvé sur une scène de crime.</description>
    </item>
    <item>
      <title> Évaluation intégratrice (30%)</title>
      <link>https://example.org/semaine15/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine15/index.html</guid>
      <description>Informations Date:&#x9;Semaine #15 (Voir le calendrier) Matière: Semaines 1 à 14 inclusivement Documentation permise: 1 feuille recto-verso (manuscrite ou imprimée) Format:&#x9;À confirmer Important&#xD;Vous devez remettre votre code sur Moodle : le fichier projet_prenom_nom.ipynb (15%) au plus tard ce soir à 23h59.</description>
    </item>
    <item>
      <title>Solutions des exercices</title>
      <link>https://example.org/solutions_exercices/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/solutions_exercices/index.html</guid>
      <description>02. Variables, types, entrées et fonctions&#xA;03. Structures conditionnelles&#xA;04. Boucles et débogage simple&#xA;06. Listes, chaines et visualisation des données&#xA;07. Tableaux NumPy et droite de régression&#xA;08. Dictionnaires et fichiers texte&#xA;09. Révision&#xA;11. Fonctions personnalisées</description>
    </item>
    <item>
      <title>Solutions des ateliers</title>
      <link>https://example.org/solutions_ateliers/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/solutions_ateliers/index.html</guid>
      <description>02. Variables, types, entrées et fonctions&#xA;03. Structures conditionnelles&#xA;04. Boucles et débogage simple&#xA;06. Listes, chaines et visualisation des données&#xA;07. Tableaux NumPy et droite de régression&#xA;08. Dictionnaires et fichiers texte&#xA;09. Révision&#xA;11. Fonctions personnalisées</description>
    </item>
  </channel>
</rss>