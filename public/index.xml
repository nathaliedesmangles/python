<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programmation en sciences :: 420-SN1-RE</title>
    <link>https://example.org/index.html</link>
    <description>Description du cours Ce cours permet de se familiariser avec la programmation informatique dans un contexte scientifique et de faire le lien entre les technologies et le domaine des sciences.&#xA;L’élève est introduit à la résolution de problèmes à l’aide d’algorithmes. Il doit traduire les algorithmes en code en utilisant un langage de programmation, tout en vérifiant le bon fonctionnement de son programme. Il traite des données et présente des résultats scientifiques à l’aide de la programmation lettrée.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Foire Aux Questions</title>
      <link>https://example.org/faq/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/faq/index.html</guid>
      <description>Outils et locaux pour pratiquer Quel logiciel je peux installer sur mon ordinateur personnel pour pratiquer à la maison ? Alternatives à VS Code La sauvegarde automatique dans Visual Studio Code. Sauvegarde dans VS Code Les raccourcis clavier (copier, coller, couper, enregistrer, etc.) Trucs pratiques pour bien coder Où se trouve les touches pour [, ], {, }, @, &lt;, &gt;, etc. sur un clavier QWERTY. Trucs pratiques pour bien coder Dans quels locaux du cégep, je peux aller pratiquer ?</description>
    </item>
    <item>
      <title>Outils de développement</title>
      <link>https://example.org/outils_dev/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/outils_dev/index.html</guid>
      <description>Se connecter à OneDrive Fichiers et répertoires/dossiers Utiliser Visual Studio Code (VS Code) Sauvegarde dans VS Code Déboguer dans VS Code Utiliser un bloc-note Jupyter Astuces et touches spéciales Markdown pour les rapports</description>
    </item>
    <item>
      <title>Règlements de classe</title>
      <link>https://example.org/regles/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/regles/index.html</guid>
      <description>1. Comporte-toi comme si tu étais déjà en emploi. Arrive à l’heure, sois prêt à travailler, et respecte les échéances. Ton attitude ici prépare ton avenir professionnel.&#xA;2. Respecte-toi, donc agis avec respect. Ton comportement reflète la manière dont tu te considères. Adopte une attitude calme, polie et attentive envers toi-même, les autres et l’enseignant·e.&#xA;3. Sois présent, mentalement et physiquement. Utilise ton cellulaire seulement pour les besoins du cours. Reste concentré·e pendant les activités, comme tu le ferais dans un contexte de travail.</description>
    </item>
    <item>
      <title>───────────</title>
      <link>https://example.org/separateur_section/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/separateur_section/index.html</guid>
      <description></description>
    </item>
    <item>
      <title>Les séances de cours</title>
      <link>https://example.org/cours/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/cours/index.html</guid>
      <description>Liste d’attente pour poser des questions Cliquez ici pour entrer votre nom&#xA;Calendrier scolaire et répartition des 15 semaines Calendrier scolaire Répartition des 15 semaines Groupe 09&#xA;(lundi 15h20)&#xD;Groupe 11&#xA;(mercredi 08h00)&#xD;Groupe 10&#xA;(vendredi 15h20)&#xD;Cours 01&#xD;25 août&#xA;Plan de cours&#xA;Quiz&#xD;27 août&#xA;Plan de cours&#xA;Quiz&#xD;22 août&#xA;Plan de cours&#xA;Quiz&#xD;Cours 02&#xD;4 septembre&#xD;3 septembre&#xD;29 août&#xD;Cours 03&#xD;8 septembre&#xD;10 septembre&#xD;5 septembre&#xD;Cours 04&#xD;15 septembre&#xD;17 septembre&#xD;12 septembre&#xD;Cours 05&#xD;Évaluation #1 (25%)</description>
    </item>
    <item>
      <title> Présentation du cours et l&#39;environnement de travail</title>
      <link>https://example.org/semaine1/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine1/index.html</guid>
      <description>Objectifs pédagogiques À la fin de la leçon, vous devrez être en mesure de :&#xA;Comprendre les objectifs du cours et les règlements du collège à respecter (Quiz WooClap) Vous connecter à votre compte OneDrive scolaire. Créer une structure de dossiers pour le cours. Comprendre l’interface de VS Code Ouvrir un dossier et un fichier (.ipynb) dans VS Code. Créer un fichier .ipynb dans VS Code. Écrire et exécuter du code Python simple.</description>
    </item>
    <item>
      <title> Introduction à Python (Variables, types de données et algorithme)</title>
      <link>https://example.org/semaine2/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine2/index.html</guid>
      <description>Objectifs d’apprentissage À la fin de la leçon, vous devrez être en mesure de :&#xA;Comprendre l’utilité des variables en programmation. Définir et utiliser des variables en Python. Manipuler les types de base en Python: int, float, str, bool. Afficher les résultats de manière claire et lisible. Comprendre le rôle d’un algorithme. Écrire et traduire des algorithmes simples en python. Variables et types de données de base Une variable est un nom qui permet de stocker une valeur pour la réutiliser.</description>
    </item>
    <item>
      <title> Saisie au clavier, fonctions et débogage</title>
      <link>https://example.org/semaine3/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine3/index.html</guid>
      <description>Objectifs d’apprentissage Gérer les entrées (saisies au clavier) d’un programme Python. Lire des données entrées par l’utilisateur. Utiliser des fonctions prédéfinies. Définir ses propres fonctions avec def Utiliser des paramètres pour envoyer des données. Retourner un résultat avec return. Comprendre la portée locale des variables. Comprendre les messages d’erreurs et à apprendre à déboguer un programme. Lecture et conversion de données Lire une donnée au clavier La fonction input() permet de lire une donnée saisie au clavier :</description>
    </item>
    <item>
      <title> Évaluation #1 (20%)</title>
      <link>https://example.org/semaine4/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine4/index.html</guid>
      <description>## Informations&#xA;Date:&#x9;Semaine #4 (Voir le calendrier) Matière: Semaines 1 à 3 inclusivement Documentation permise: 1 feuille recto-verso (manuscrite ou imprimée) Format:&#x9;À confirmer</description>
    </item>
    <item>
      <title> Décider avec `if`, `elif`, `else` et les opérateurs</title>
      <link>https://example.org/semaine5/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine5/index.html</guid>
      <description>Objectifs d’apprentissage Identifier et utiliser correctement les opérateurs de comparaison et logiques pour évaluer des conditions simples en Python. Écrire des structures conditionnelles (if, elif, else) pour contrôler le déroulement d’un programme selon différentes situations. Appliquer les structures conditionnelles à des contextes scientifiques simples. Les opérateurs de comparaison Ces opérateurs permettent de comparer des valeurs. Le résultat est toujours un booléen : True (vrai) ou False (faux).&#xA;Opérateur Signification Exemple Résultat == égal à 5 == 5 True !</description>
    </item>
    <item>
      <title> Répéter avec `for` et `while`</title>
      <link>https://example.org/semaine6/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine6/index.html</guid>
      <description>Objectifs de la leçon Comprendre l’utilité des boucles en programmation. Savoir écrire des boucles while et for. Savoir identifier quand utiliser une boucle for vs. while. Interrompre le déroulement d’une boucle. Appliquer les boucles à des cas concrets en sciences. À quoi servent les boucles ? Elles permettent de répéter des instructions plusieurs fois, soit un nombre connu, soit jusqu’à ce qu’une condition soit atteinte.&#xA;La boucle while Utilisée quand on ne connaît pas d’avance combien de fois répéter.</description>
    </item>
    <item>
      <title> Listes, chaînes de caractères et graphiques de base</title>
      <link>https://example.org/semaine7/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine7/index.html</guid>
      <description>Objectifs d’apprentissage Créer et manipuler des listes de données numériques ou textuelles en Python (ajout, suppression, parcours, calcul de statistiques simples). Accéder, modifier et parcourir les caractères d’une chaîne de caractères. Appliquer des méthodes de traitement de texte pour analyser ou transformer des chaînes de caractères (ex. : mise en minuscules, découpage, recherche, comptage). Les listes de données Une liste est un contenant qui peut regrouper plusieurs valeurs (appelées éléments), dans un ordre donné.</description>
    </item>
    <item>
      <title> Évaluation #2 (25%)</title>
      <link>https://example.org/semaine8/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine8/index.html</guid>
      <description>Informations ⦁&#x9;Date:&#x9;Semaine #8 (Voir le calendrier) ⦁&#x9;Matière: Semaines 5 à 7 inclusivement ⦁&#x9;Documentation permise: 1 feuille recto-verso (manuscrite ou imprimée) ⦁&#x9;Format:&#x9;À confirmer</description>
    </item>
    <item>
      <title> Tableaux NumPy</title>
      <link>https://example.org/semaine9/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine9/index.html</guid>
      <description>Objectifs d’apprentissage À la fin de cette leçon, vous devrez être capable de :&#xA;Comprendre le rôle de NumPy pour le calcul scientifique rapide avec des tableaux. Utiliser Pandas pour manipuler des tableaux de données (DataFrame). Charger des données à partir d’un fichier CSV et faire des analyses simples. Appliquer des opérations mathématiques et statistiques de base. Pourquoi utiliser NumPy et Pandas? Python est très puissant pour l’analyse de données scientifiques.</description>
    </item>
    <item>
      <title> Graphiques SciPy et traitement de fichiers CSV avec Pandas</title>
      <link>https://example.org/semaine10/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine10/index.html</guid>
      <description>* Importer la bibliothèque NumPy&#xA;* Utiliser les fonctions de NumPy pour créer des tableaux (1D, 2D)&#xA;* Utiliser les fonctions mathématiques de NumPy pour obtenir des statistiques sur les données&#xA;* Ajouter une droite sur un graphique (régression linéaire)&#xA;* Calculer une droite de régression (y = a·x + b)&#xA;* Extraire la pente, l’ordonnée à l’origine, le R², l’erreur-type et la p-valeur&#xA;* Évaluer la qualité de l’ajustement avec le coefficient de détermination</description>
    </item>
    <item>
      <title> Évaluation #3 (20%)</title>
      <link>https://example.org/semaine11/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine11/index.html</guid>
      <description>## Informations&#xA;⦁&#x9;Date:&#x9;Semaine #8 (Voir le calendrier)&#xA;⦁&#x9;Matière: Semaines 9 et 10 inclusivement&#xA;⦁&#x9;Documentation permise: 1 feuille recto-verso (manuscrite ou imprimée)&#xA;⦁&#x9;Format:&#x9;À confirmer</description>
    </item>
    <item>
      <title> Projet-Partie 1: Analyse et algorithmes</title>
      <link>https://example.org/semaine12/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine12/index.html</guid>
      <description>## Objectifs pédagogiques&#xA;Présentation du projet Présentation de la grille de correction Analyse préliminaire du projet (activité guidée): * Comprendre le problème&#xA;* Identifier les variables (types), constantes, formules, fonctions, etc.&#xA;* Élaborer les algorithmes</description>
    </item>
    <item>
      <title> Projet-Partie 2: Représentations graphiques de base</title>
      <link>https://example.org/semaine13/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine13/index.html</guid>
      <description>Remue-méninges et planification # Fiche de projet final – Programmation en sciences avec Python ## Informations de l&#39;étudiant - **Nom :** - **Date :** --- ## 1. Titre du projet *(Donne un titre clair et descriptif à ton projet)* --- ## 2. Objectif du projet *(Explique en une ou deux phrases ce que ton programme permettra d’analyser, de simuler ou de résoudre.)* --- ## 3. Description du fonctionnement prévu - **Entrées attendues :** *(Quelles données l’utilisateur devra-t-il fournir?</description>
    </item>
    <item>
      <title> Projet-Partie 3: Représentation graphique avancée</title>
      <link>https://example.org/semaine14/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine14/index.html</guid>
      <description></description>
    </item>
    <item>
      <title>Finalisation et Remise du rapport final</title>
      <link>https://example.org/semaine15/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/semaine15/index.html</guid>
      <description>Vous devez remettre votre code : le fichier prenomNom.ipynb au plus tard ce soir à 23h59.</description>
    </item>
    <item>
      <title>Solutions des exercices</title>
      <link>https://example.org/solutions_exercices/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/solutions_exercices/index.html</guid>
      <description>02. Variables, types et expressions&#xA;03. Entrées/Sorties, algorithme et débogage&#xA;04. Fonctions&#xA;06. IF-ELIF-ELSE&#xA;07. Boucles WHILE et FOR&#xA;08. Listes, chaines et dictionnaires&#xA;10. Visualisation des données (la base)&#xA;11. Tableaux NumPy et graphiques avancés&#xA;12. Visualisation des données et présentation du projet</description>
    </item>
    <item>
      <title>Solutions des ateliers</title>
      <link>https://example.org/solutions_ateliers/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.org/solutions_ateliers/index.html</guid>
      <description></description>
    </item>
  </channel>
</rss>