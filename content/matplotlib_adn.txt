Voici une **le√ßon essentielle sur `matplotlib`** pour le **projet d‚Äôenqu√™te ADN**, destin√©e √† des √©tudiants de 1re session en sciences de la nature.
Elle couvre **le strict minimum** pour tracer des graphiques utiles √† ce type de projet, en utilisant **uniquement `f-strings` avec `print`** pour les messages.

---

# üé® Le√ßon : Visualiser des donn√©es avec `matplotlib`

## üéØ Objectif

Apprendre √† :

* Tracer un graphique simple avec `matplotlib`
* Visualiser la relation entre deux s√©ries (ex. : temp√©rature vs solubilit√©, nombre de loci communs vs probabilit√©)
* Ajouter un titre, des √©tiquettes, une droite de r√©gression

---

## 1. Importer `matplotlib.pyplot`

```python
import matplotlib.pyplot as plt
```

---

## 2. Tracer des donn√©es (points)

Voici un exemple de donn√©es simul√©es dans le cadre du projet ADN :

```python
x = [1, 2, 3, 4, 5]
y = [0.1, 0.3, 0.6, 0.8, 1.0]
```

Tracer un nuage de points :

```python
plt.scatter(x, y)
plt.title("Probabilit√© selon le nombre de loci communs")
plt.xlabel("Nombre de loci communs")
plt.ylabel("Probabilit√©")
plt.grid(True)
plt.show()

print(f"Graphique avec {len(x)} points trac√©s.")
```

---

## 3. Tracer une droite de r√©gression

Supposons qu‚Äôon a une pente et une ordonn√©e √† l‚Äôorigine obtenues par r√©gression :

```python
slope = 0.22
intercept = -0.05
```

Cr√©er les valeurs pr√©dites :

```python
y_pred = [slope * xi + intercept for xi in x]
```

Tracer la droite **avec** les points :

```python
plt.scatter(x, y, label="Donn√©es r√©elles")
plt.plot(x, y_pred, color="red", label="R√©gression")
plt.title("R√©gression lin√©aire")
plt.xlabel("Nombre de loci communs")
plt.ylabel("Probabilit√©")
plt.legend()
plt.grid(True)
plt.show()

print(f"Droite trac√©e avec slope={slope:.2f} et intercept={intercept:.2f}.")
```

---

## 4. Sauvegarder le graphique (optionnel)

```python
plt.savefig("graphique_adn.png")
print(f"Graphique sauvegard√© dans le fichier graphique_adn.png")
```

---

## ‚úçÔ∏è Exercices pratiques

### üîπ Exercice 1 ‚Äì Lien entre temp√©rature et solubilit√©

1. Temp√©ratures : `[0, 10, 20, 30, 40, 50]`
2. Solubilit√©s : `[10, 14, 18, 25, 32, 40]`
3. Trace un nuage de points
4. Affiche un graphique bien √©tiquet√©

---

### üîπ Exercice 2 ‚Äì Loci vs probabilit√©

1. Nombre de loci communs : `[0, 1, 2, 3, 4, 5]`
2. Probabilit√©s associ√©es : `[0.01, 0.05, 0.12, 0.30, 0.70, 0.95]`
3. Trace les points
4. Ajoute une droite de r√©gression avec une pente de `0.18` et un intercept de `-0.02`

---

### üîπ Exercice 3 ‚Äì Pr√©parer un graphique pour un rapport

1. Donn√©es :

   * `x = [1, 2, 3, 4, 5]`
   * `y = [2, 3.8, 5.9, 8.1, 10.1]`
2. Effectue une r√©gression avec `scipy.stats.linregress()` (vu dans la le√ßon pr√©c√©dente)
3. Trace les points et la droite
4. Ajoute : titre, axes, grille, l√©gende
5. Sauvegarde le fichier sous le nom `"rapport_solubilite.png"`

---

Souhaitez-vous cette le√ßon en version `.ipynb` ou `.pdf` pr√™te √† distribuer ?
