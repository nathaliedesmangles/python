Voici une **leçon ciblée sur `scipy`** adaptée au contexte du **projet d’enquête d’ADN**, conçue pour des étudiants de première session en sciences de la nature. L’objectif est de **faire le strict nécessaire** pour :

* Faire une **régression linéaire** sur des données biologiques (longueur d’ADN vs taille d’un spécimen, etc.)
* Utiliser les résultats pour **interpréter scientifiquement** les données
* Ne faire appel **qu’à des `f-strings` avec `print`**

---

# 🧬 Leçon : Utiliser `scipy` pour analyser des données d’ADN

## 🎯 Objectif

Apprendre à utiliser `scipy.stats.linregress()` pour :

* Établir une **relation linéaire** entre deux séries de données
* Obtenir la **pente**, l’ordonnée à l’origine et le **coefficient R²**
* Interpréter les résultats

---

## 1. Importer les bibliothèques nécessaires

```python
import numpy as np
from scipy import stats
```

---

## 2. Créer des données simples

Imaginons que l’on mesure la longueur d’un fragment d’ADN (en pb) en fonction de la taille d’un individu (en cm) :

```python
longueur_adn = np.array([500, 700, 800, 1000])
taille_cm = np.array([50, 70, 78, 95])
```

---

## 3. Faire une régression linéaire

```python
resultat = stats.linregress(longueur_adn, taille_cm)
```

Cela retourne un objet contenant :

* `slope` : pente
* `intercept` : ordonnée à l’origine
* `rvalue` : coefficient de corrélation (R)
* `pvalue` : probabilité d’erreur
* `stderr` : erreur standard de la pente

---

## 4. Afficher les résultats

```python
print(f"Pente : {resultat.slope:.2f}")
print(f"Ordonnée à l’origine : {resultat.intercept:.2f}")
print(f"R² : {resultat.rvalue**2:.4f}")
print(f"Valeur de p : {resultat.pvalue:.4f}")
```

---

## 5. Interprétation

```python
if resultat.rvalue**2 > 0.9:
    print(f"Très forte corrélation entre longueur d’ADN et taille.")
elif resultat.rvalue**2 > 0.5:
    print(f"Corrélation modérée entre longueur d’ADN et taille.")
else:
    print(f"Corrélation faible ou inexistante.")
```

---

## ✍️ Exercices pratiques

### 🔹 Exercice 1 – Relation entre deux séries

1. Données :

   * `x = [100, 200, 300, 400, 500]`
   * `y = [10, 22, 31, 42, 48]`
2. Calcule la régression linéaire.
3. Affiche la pente, l’ordonnée à l’origine et R².
4. Affiche une phrase selon la force du lien.

---

### 🔹 Exercice 2 – Relation ADN et enzyme

1. Données :

   * Longueur d’ADN : `[450, 500, 550, 600, 650]`
   * Activité enzymatique mesurée : `[0.5, 0.6, 0.7, 0.85, 0.95]`
2. Effectue une régression linéaire.
3. Affiche les résultats en utilisant uniquement des `f-strings`.

---

### 🔹 Exercice 3 – Relation douteuse

1. Données :

   * Séquence 1 : `[1, 2, 3, 4, 5]`
   * Séquence 2 : `[10, 15, 11, 9, 14]`
2. Effectue une régression linéaire.
3. Interprète si les données sont vraiment corrélées.

---

Souhaitez-vous une version `.ipynb` de cette leçon ?
