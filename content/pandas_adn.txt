Voici une **leçon courte, claire et ciblée** sur l'utilisation de `pandas`, adaptée aux étudiants de première session en sciences de la nature et centrée sur les besoins du **projet d’enquête ADN**.

---

# 🧬 Leçon : Introduction à `pandas` pour l’analyse d’ADN

## 🎯 Objectif

Apprendre à utiliser les outils de base de la bibliothèque **`pandas`** pour :

* Lire un fichier de données (`.csv`)
* Explorer et comprendre la structure des données
* Accéder aux colonnes et lignes
* Filtrer et sélectionner des données utiles

---

## 1. Importer la bibliothèque

Avant d'utiliser `pandas`, il faut l'importer dans votre programme :

```python
import pandas as pd
```

---

## 2. Lire un fichier CSV

```python
df = pd.read_csv("suspects.csv")
```

Cela lit un tableau de données et le stocke dans un **DataFrame** (tableau structuré). On donne souvent à ce tableau le nom `df`.

---

## 3. Observer les premières lignes

```python
print(df.head())
```

Cela permet de voir les **5 premières lignes** du tableau.

---

## 4. Voir les noms des colonnes

```python
print(df.columns)
```

---

## 5. Accéder à une colonne

```python
print(df["Nom"])
```

Cela affiche toutes les valeurs de la colonne `Nom`.

---

## 6. Accéder à une ligne

```python
print(df.iloc[0])  # La première ligne (indice 0)
```

---

## 7. Filtrer les données (par exemple : trouver la ligne correspondant au profil ADN du crime)

```python
crime = df[df["Nom"] == "Crime"]
print(crime)
```

On peut ensuite extraire cette ligne :

```python
crime = crime.iloc[0]
print(crime["Locus_1"])
```

---

## 8. Boucler sur les lignes du tableau

Pour comparer chaque suspect à la séquence ADN du crime :

```python
for i, ligne in df.iterrows():
    if ligne["Nom"] != "Crime":
        print(f"{ligne['Nom']} : {ligne['Locus_1']}")
```

---

## 9. Ajouter une colonne avec des résultats

On peut créer une nouvelle colonne, par exemple pour y stocker un score de correspondance :

```python
df["Score"] = [80, 90, 95, 85, None]  # juste un exemple
print(df)
```

---

## ✍️ Exercices pratiques

### 🔹 Exercice 1 – Chargement et exploration

1. Charge le fichier `suspects.csv`.
2. Affiche les premières lignes.
3. Affiche les noms des colonnes.
4. Affiche la séquence `Locus_2` du suspect nommé "Alice".

---

### 🔹 Exercice 2 – Extraction du profil ADN du crime

1. Filtre pour ne garder que la ligne "Crime".
2. Stocke cette ligne dans une variable nommée `crime`.
3. Affiche la séquence du locus 3 (`Locus_3`) du crime.

---

### 🔹 Exercice 3 – Boucle sur les suspects

1. Pour chaque suspect (sauf "Crime"), affiche son nom et sa séquence `Locus_1`.

---

### 🔹 Exercice 4 – Ajout de colonnes

1. Crée une nouvelle colonne appelée `Test` qui contient la valeur `42` pour chaque ligne.
2. Affiche le DataFrame.

---

Souhaitez-vous aussi cette leçon en format `.ipynb` pour vos étudiants ?
